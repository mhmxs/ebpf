// Code generated by bpf2go; DO NOT EDIT.
// +build arm64be armbe mips mips64 mips64p32 ppc64 s390 s390x sparc sparc64

package main

import (
	"bytes"
	_ "embed"
	"fmt"
	"io"

	"github.com/cilium/ebpf"
)

// LoadTopWriteExample returns the embedded CollectionSpec for TopWriteExample.
func LoadTopWriteExample() (*ebpf.CollectionSpec, error) {
	reader := bytes.NewReader(_TopWriteExampleBytes)
	spec, err := ebpf.LoadCollectionSpecFromReader(reader)
	if err != nil {
		return nil, fmt.Errorf("can't load TopWriteExample: %w", err)
	}

	return spec, err
}

// LoadTopWriteExampleObjects loads TopWriteExample and converts it into a struct.
//
// The following types are suitable as obj argument:
//
//     *TopWriteExampleObjects
//     *TopWriteExamplePrograms
//     *TopWriteExampleMaps
//
// See ebpf.CollectionSpec.LoadAndAssign documentation for details.
func LoadTopWriteExampleObjects(obj interface{}, opts *ebpf.CollectionOptions) error {
	spec, err := LoadTopWriteExample()
	if err != nil {
		return err
	}

	return spec.LoadAndAssign(obj, opts)
}

// TopWriteExampleSpecs contains maps and programs before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type TopWriteExampleSpecs struct {
	TopWriteExampleProgramSpecs
	TopWriteExampleMapSpecs
}

// TopWriteExampleSpecs contains programs before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type TopWriteExampleProgramSpecs struct {
	KprobeGenericWriteEnd *ebpf.ProgramSpec `ebpf:"kprobe_generic_write_end"`
}

// TopWriteExampleMapSpecs contains maps before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type TopWriteExampleMapSpecs struct {
	Events *ebpf.MapSpec `ebpf:"events"`
}

// TopWriteExampleObjects contains all objects after they have been loaded into the kernel.
//
// It can be passed to LoadTopWriteExampleObjects or ebpf.CollectionSpec.LoadAndAssign.
type TopWriteExampleObjects struct {
	TopWriteExamplePrograms
	TopWriteExampleMaps
}

func (o *TopWriteExampleObjects) Close() error {
	return _TopWriteExampleClose(
		&o.TopWriteExamplePrograms,
		&o.TopWriteExampleMaps,
	)
}

// TopWriteExampleMaps contains all maps after they have been loaded into the kernel.
//
// It can be passed to LoadTopWriteExampleObjects or ebpf.CollectionSpec.LoadAndAssign.
type TopWriteExampleMaps struct {
	Events *ebpf.Map `ebpf:"events"`
}

func (m *TopWriteExampleMaps) Close() error {
	return _TopWriteExampleClose(
		m.Events,
	)
}

// TopWriteExamplePrograms contains all programs after they have been loaded into the kernel.
//
// It can be passed to LoadTopWriteExampleObjects or ebpf.CollectionSpec.LoadAndAssign.
type TopWriteExamplePrograms struct {
	KprobeGenericWriteEnd *ebpf.Program `ebpf:"kprobe_generic_write_end"`
}

func (p *TopWriteExamplePrograms) Close() error {
	return _TopWriteExampleClose(
		p.KprobeGenericWriteEnd,
	)
}

func _TopWriteExampleClose(closers ...io.Closer) error {
	for _, closer := range closers {
		if err := closer.Close(); err != nil {
			return err
		}
	}
	return nil
}

// Do not access this directly.
//go:embed topwriteexample_bpfeb.o
var _TopWriteExampleBytes []byte
